@page "/settings"
@using MudBlazor
@using SpiritWeb.Client.Services
@using SpiritWeb.Client.Models
@using SpiritWeb.Shared.Models
@inject AuthService AuthService
@inject NewsService NewsService
@inject NavigationManager NavigationManager
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-6">
    <MudGrid Justify="Justify.Center" Spacing="4">
        <!-- Titre de la page -->
        <MudItem xs="12">
            <MudPaper Class="pa-4" Style="@($"background-color: {ColorConstant.colorBackgroundMallow80}; border: 1px solid {ColorConstant.colorBackgroundMallowBordure};")">
                <MudText Typo="Typo.h3" Class="text-center" Style="font-family: 'Press Start 2P', cursive; color: #333;">
                    Gestion des Actualités
                </MudText>
                <MudText Typo="Typo.body1" Class="mt-2 text-center" Style="color: #555;">
                    Créez, modifiez et gérez les actualités du jeu Spirit
                </MudText>
            </MudPaper>
        </MudItem>

        <!-- Bouton pour créer une nouvelle actualité -->
        <MudItem xs="12" Class="d-flex justify-end mb-4">
            <MudButton Variant="Variant.Filled"
                       Color="Color.Primary"
                       StartIcon="@Icons.Material.Filled.Add"
                       OnClick="@(() => OpenNewsDialog())"
                       Style="border-radius: 8px;">Nouvelle actualité
            </MudButton>
        </MudItem>

        <!-- Affichage des erreurs s'il y en a -->
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <MudItem xs="12">
                <MudAlert Severity="Severity.Error" ShowCloseIcon="true" CloseIconClicked="@(() => _errorMessage = null)">@_errorMessage</MudAlert>
            </MudItem>
        }

        <!-- Liste des actualités -->
        @if (_loading)
        {
            <MudItem xs="12" Class="d-flex justify-center">
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
            </MudItem>
        }
        else if (_newsList == null || !_newsList.Any())
        {
            <MudItem xs="12">
                <MudPaper Class="pa-4 text-center" Style="@($"background-color: {ColorConstant.colorBackgroundMallow80}; border: 1px solid {ColorConstant.colorBackgroundMallowBordure};")">
                    <MudText Typo="Typo.h6">Aucune actualité disponible</MudText>
                    <MudText Typo="Typo.body1" Class="mt-2">Créez votre première actualité en cliquant sur le bouton "Nouvelle actualité"</MudText>
                </MudPaper>
            </MudItem>
        }
        else
        {
            <MudItem xs="12">
                <MudPaper Class="pa-4" Style="@($"background-color: {ColorConstant.colorBackgroundMallow80}; border: 1px solid {ColorConstant.colorBackgroundMallowBordure};")">
                    <MudTable Items="@_newsList" Hover="true" Breakpoint="Breakpoint.Sm" Loading="@_loading"
                              LoadingProgressColor="Color.Primary" Elevation="0">
                        <HeaderContent>
                            <MudTh>Titre</MudTh>
                            <MudTh>Date de publication</MudTh>
                            <MudTh>Épinglée</MudTh>
                            <MudTh>Actions</MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Titre">
                                <MudText Typo="Typo.body1" Style="@($"font-weight: {(context.IsPinned ? "bold" : "normal")};")">
                                    @context.Title
                                </MudText>
                            </MudTd>
                            <MudTd DataLabel="Date de publication">
                                @context.PublishDate.ToLocalTime().ToString("dd/MM/yyyy HH:mm")
                            </MudTd>
                            <MudTd DataLabel="Épinglée">
                                <MudCheckBox T="bool" Checked="@context.IsPinned"
                                             CheckedChanged="@((bool value) => TogglePin(context, value))"
                                             Color="Color.Secondary" />
                            </MudTd>
                            <MudTd DataLabel="Actions">
                                <MudButton Variant="Variant.Filled"
                                           Color="Color.Primary"
                                           Size="Size.Small"
                                           OnClick="@(() => OpenNewsDialog(context))"
                                           Class="mr-2">
                                    <MudIcon Icon="@Icons.Material.Filled.Edit" Size="Size.Small" />
                                </MudButton>
                                <MudButton Variant="Variant.Filled"
                                           Color="Color.Error"
                                           Size="Size.Small"
                                           OnClick="@(() => OpenDeleteDialog(context))">
                                    <MudIcon Icon="@Icons.Material.Filled.Delete" Size="Size.Small" />
                                </MudButton>
                            </MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudPaper>
            </MudItem>
        }
    </MudGrid>
</MudContainer>

<!-- Dialog d'édition/création -->
@if (_showNewsDialog)
{
    <div class="dialog-container">
        <MudOverlay Class="dialog-overlay" @onclick="CloseDialog" />

        <MudCard Class="dialog-card" Elevation="25">
            <MudCardHeader>
                <MudText Typo="Typo.h6">
                    @(_editingNews?.Id == "0" ? "Nouvelle actualité" : "Modifier l'actualité")
                </MudText>
                <MudIconButton Icon="@Icons.Material.Filled.Close"
                               OnClick="CloseDialog"
                               Color="Color.Error"
                               Class="float-right" />
            </MudCardHeader>

            <MudCardContent>
                <MudForm @ref="_form" Model="@(_editingNews ?? new NewsModel())" @bind-IsValid="@_formIsValid">
                    <MudTextField @bind-Value="_editingNews.Title"
                                  Label="Titre"
                                  Required="true"
                                  RequiredError="Le titre est obligatoire"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Class="mb-3" />

                    <MudTextField @bind-Value="_editingNews.Content"
                                  Label="Contenu"
                                  Required="true"
                                  RequiredError="Le contenu est obligatoire"
                                  Lines="10"
                                  Immediate="true"
                                  Variant="Variant.Outlined"
                                  Class="mb-3" />

                    @if (_editingNews != null)
                    {
                        <MudCheckBox T="bool" @bind-Checked="_editingNews.IsPinned"
                                     Label="Épingler cette actualité"
                                     Color="Color.Primary" />
                    }
                </MudForm>
            </MudCardContent>

            <MudCardActions>
                <MudButton OnClick="CloseDialog"
                           Variant="Variant.Outlined"
                           Color="Color.Secondary">
                    Annuler
                </MudButton>
                <MudButton OnClick="SaveNewsAsync"
                           Variant="Variant.Filled"
                           Color="Color.Primary"
                           Disabled="@(!_formIsValid)">
                    @(_editingNews?.Id == "0" ? "Créer" : "Enregistrer")
                </MudButton>
            </MudCardActions>
        </MudCard>
    </div>
}



<!-- Dialog de confirmation de suppression -->
@if (_showDeleteDialog)
{
    <div class="dialog-container">
        <MudOverlay Class="dialog-overlay" @onclick="CloseDeleteDialog" />

        <MudCard Class="dialog-card" Elevation="25">
            <MudCardHeader>
                <MudText Typo="Typo.h6">
                    Confirmation de suppression
                </MudText>
            </MudCardHeader>

            <MudCardContent>
                <MudText>Êtes-vous sûr de vouloir supprimer cette actualité ?</MudText>
                <MudText Typo="Typo.subtitle1" Class="mt-2 font-weight-bold">@_deletingNews?.Title</MudText>
                <MudText Typo="Typo.body2" Class="mt-1 text-muted">Cette action est irréversible.</MudText>
            </MudCardContent>

            <MudCardActions>
                <MudButton OnClick="CloseDeleteDialog"
                           Variant="Variant.Outlined"
                           Color="Color.Secondary">
                    Annuler
                </MudButton>
                <MudButton OnClick="DeleteNewsAsync"
                           Variant="Variant.Filled"
                           Color="Color.Error">
                    Supprimer
                </MudButton>
            </MudCardActions>
        </MudCard>
    </div>
}

<style>
    /* Styles pour la page d'administration des actualités */
    body {
        background-color: @ColorConstant.colorBackgroundMallow80;
    }

    .dialog-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

    .dialog-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        z-index: 1001;
    }

    .dialog-card {
        width: 600px;
        max-width: 90vw;
        max-height: 90vh;
        overflow-y: auto;
        z-index: 1002;
        position: relative;
    }
</style>
